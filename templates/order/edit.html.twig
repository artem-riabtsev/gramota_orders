{% extends 'base.html.twig' %}

{% block content %}
<h1>Заказ {{ order.id }}</h1>

{% include 'modals/modal_delete.html.twig' %}
{% include 'modals/modal_date.html.twig' %}
{% include 'modals/modal_order_item.html.twig' %}

<form method="post" action="{{ path('app_order_edit', {'id': order.id}) }}" id="order-form">
    <input type="hidden" name="deleted_items[]" id="deleted-items" value="">

    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3 d-flex align-items-center" style="gap: 12px;">
                    <strong>Дата заказа:</strong>
                    <span id="order-date-display">{{ order.date|date('d.m.Y') }}</span>

                    <button type="button" href="{{ path('app_customer_edit', {'id': order.customer.id}) }}" 
                        id="edit-date-btn"
                        title="Редактировать дату"
                        class="btn btn-sm btn-outline-primary d-inline-flex align-items-center justify-content-center border-0 shadow-none" 
                        style="width: 25px; height: 25px; padding: 0; background-color: #6c757d;"
                        onmouseover="this.style.backgroundColor='#5a6268'" 
                        onmouseout="this.style.backgroundColor='#6c757d'">
                        <i class="bi bi-pencil" style="font-size: 1rem; color: white;"></i>
                    </button>
                </div>
            </div>
            <div class="d-flex" style="gap: 8px; ">
                <div class="mb-4">Заказчик: {{ order.customer.name }} ({{ order.customer.email }}, {{ order.customer.phone }})</div>
                <a href="{{ path('app_customer_edit', {'id': order.customer.id}) }}" 
                    class="btn btn-sm btn-outline-primary d-inline-flex align-items-center justify-content-center border-0 shadow-none" 
                    style="width: 25px; height: 25px; padding: 0; background-color: #6c757d;"
                    onmouseover="this.style.backgroundColor='#5a6268'" 
                    onmouseout="this.style.backgroundColor='#6c757d'">
                    <i class="bi bi-pencil" style="font-size: 1rem; color: white;"></i>
                </a>
            </div>
             {% if order.status == 1 %}
                <span class="text-secondary">Не оплачен</span>
            {% elseif order.status == 2 %}
                <span class="text-danger">Частично оплачен</span>
            {% elseif order.status == 3 %}
                <span class="text-danger">Переплата</span>
            {% else %}
                <span class="text-success">Оплачен</span>
            {% endif %}
            <div class="d-flex" style="gap: 50px;">
                <div>Сумма заказа: <strong>{{ order.orderTotal }}</strong></div>
                <div>Сумма оплаты: {{ order.totalPaid }}</div>
            </div>
        </div>
    </div>

    <table class="table table-hover table-bordered align-middle" id="orderItem-table">
    <thead>
        <tr>
            <th>Наименование</th>
            <th>Количество</th>
            <th>Цена</th>
            <th>Всего</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        {% for orderItem in order.orderItem %}
            <tr data-id="{{ orderItem.id }}">
                <td data-product-id="{{ orderItem.product.id }}" >{{ orderItem.product.description }}</td>
                <td>{{ orderItem.quantity }}</td>
                <td>{{ orderItem.price }}</td>
                <td>{{ orderItem.lineTotal }}</td>
                <td>
                    <div class='d-flex' style='gap: 8px;'>
                        <button type="button" class="btn btn-sm btn-outline-warning edit-item" 
                                data-id="{{ orderItem.id }}">Редактировать</button>
                        <button type="button" class="btn btn-sm btn-outline-danger remove-item" 
                                data-id="{{ orderItem.id }}">Удалить</button>
                    </div>
                </td>
            </tr>
        {% endfor %}
    </tbody>
</table>

<button type="button" class="btn btn-outline-secondary mb-3" id="add-item" data-bs-toggle="modal" data-bs-target="#itemModal">
    ➕ Добавить позицию
</button>

<div class="mt-3">
    <a href="{{ path('app_order_index') }}" class="btn btn-secondary">
        Назад
    </a>
</div>
    {{ form_end(form) }}
</form>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Обработка удаления элементов
    const deleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
    let itemIdToDelete = null;

    // Вешаем обработчик на все кнопки удаления
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-item')) {
            e.preventDefault();
            itemIdToDelete = e.target.dataset.id;
            deleteModal.show();
        }
    });

    // Подтверждение удаления
    document.getElementById('confirmDeleteBtn')?.addEventListener('click', function() {
        if (!itemIdToDelete) return;

        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '{{ path('app_order_edit', {'id': order.id}) }}';

        // CSRF-токен
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = '_token';
        csrfInput.value = '{{ csrf_token('edit' ~ order.id) }}';
        form.appendChild(csrfInput);

        // ID удаляемого элемента
        const deleteInput = document.createElement('input');
        deleteInput.type = 'hidden';
        deleteInput.name = 'deleted_items[]';
        deleteInput.value = itemIdToDelete;
        form.appendChild(deleteInput);

        document.body.appendChild(form);
        form.submit();
    });

    // Обработка изменения даты (если осталась в основном шаблоне)
    const dateInput = document.getElementById('order_form_date');
    if (dateInput) {
        const originalValue = dateInput.value;
        dateInput.addEventListener('input', function() {
            if (this.value !== originalValue) {
                this.classList.remove('border');
                this.classList.add('border-warning');
            } else {
                this.classList.remove('border-warning');
                this.classList.add('border');
            }
        });
    }
});
</script>
{% endblock %}
